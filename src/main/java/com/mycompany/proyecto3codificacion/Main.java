/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyecto3codificacion;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Tato
 */
public class Main extends javax.swing.JFrame {

    Codificador codificador = new Codificador();
    String textoCodificadoBits,textoOriginal,textoCodificadoBytes,textoDesCodificadoBits,textoDesCodificadoBytes,ruta;
    boolean x=false,y=false;
    
    public Main() {
        initComponents();
        GuardarCodigoButton.setEnabled(false);
        GuardarCadenaButton.setEnabled(false);
        DescomprimirButton.setEnabled(false);
        ComprimirButton.setEnabled(false);
        ImageIcon GenerarImagen = new ImageIcon("boligrafo.png");
         GenerarButton.setIcon(new ImageIcon(GenerarImagen.getImage()));
         ImageIcon ImportarImagen = new ImageIcon("importar.png");
         ImportarButton.setIcon(new ImageIcon(ImportarImagen.getImage()));
         ImageIcon GuardarCodigoImagen = new ImageIcon("disquete.png");
         GuardarCodigoButton.setIcon(new ImageIcon(GuardarCodigoImagen.getImage()));
         ImageIcon GuardarCadenaImagen = new ImageIcon("disquete.png");
         GuardarCadenaButton.setIcon(new ImageIcon(GuardarCadenaImagen.getImage()));
         ImageIcon DescomprimirImagen = new ImageIcon("minimizar.png");
         DescomprimirButton.setIcon(new ImageIcon(DescomprimirImagen.getImage()));
         ImageIcon InsertarGenerar = new ImageIcon("maximizar.png");
         ComprimirButton.setIcon(new ImageIcon(InsertarGenerar.getImage()));
         ImageIcon IconoI = new ImageIcon("hachis.png");
         ICONO.setIcon(new ImageIcon(IconoI.getImage()));
      setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoObtenidoOriginal = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textoObtenidoBits = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textoObtenidoBytes = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        mostrarCodigo = new java.awt.List();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        GenerarButton = new javax.swing.JButton();
        ImportarButton = new javax.swing.JButton();
        GuardarCodigoButton = new javax.swing.JButton();
        GuardarCadenaButton = new javax.swing.JButton();
        DescomprimirButton = new javax.swing.JButton();
        ComprimirButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        ICONO = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(725, 430));

        jButton1.setText("Abrir archivo a comprimir o descomprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textoObtenidoOriginal.setColumns(20);
        textoObtenidoOriginal.setRows(5);
        jScrollPane1.setViewportView(textoObtenidoOriginal);

        textoObtenidoBits.setColumns(20);
        textoObtenidoBits.setRows(5);
        textoObtenidoBits.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(textoObtenidoBits);

        textoObtenidoBytes.setColumns(20);
        textoObtenidoBytes.setRows(5);
        textoObtenidoBytes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane3.setViewportView(textoObtenidoBytes);

        jLabel2.setText("Codigo Huffman Actual");

        mostrarCodigo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mostrarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarCodigoActionPerformed(evt);
            }
        });

        jLabel3.setText("Cadena Bits");

        jLabel4.setText("Cadena Final");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        GenerarButton.setText("Generar Codigo Huffman");
        GenerarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarButtonActionPerformed(evt);
            }
        });

        ImportarButton.setText("Importar Codigo Nuevo");
        ImportarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportarButtonActionPerformed(evt);
            }
        });

        GuardarCodigoButton.setText("Guardar Codigo Actual");
        GuardarCodigoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCodigoButtonActionPerformed(evt);
            }
        });

        GuardarCadenaButton.setText("Guardar Cadena Final");
        GuardarCadenaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarCadenaButtonActionPerformed(evt);
            }
        });

        DescomprimirButton.setText("Descomprimir");
        DescomprimirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescomprimirButtonActionPerformed(evt);
            }
        });

        ComprimirButton.setText("Comprimir");
        ComprimirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprimirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DescomprimirButton, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(ComprimirButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(GenerarButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GuardarCadenaButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(GuardarCodigoButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ImportarButton, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GenerarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ImportarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GuardarCodigoButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GuardarCadenaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DescomprimirButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComprimirButton)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 489, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addGap(90, 90, 90)
                                        .addComponent(jLabel4)
                                        .addGap(57, 57, 57))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ICONO, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)))
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mostrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2)))
                .addGap(55, 55, 55))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 24, Short.MAX_VALUE)
                                .addComponent(mostrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ICONO, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("*txt","TXT");
            fc.setFileFilter(filtro);
            fc.setFileSelectionMode( JFileChooser.FILES_ONLY);
            int result = fc.showOpenDialog(null);
            File f = fc.getSelectedFile();
            String ruta = f.getAbsolutePath();
            if(ruta.endsWith("txt") || ruta.endsWith("TXT"))
            {
                this.ruta = ruta;
                this.textoOriginal = codificador.obtenerTexto(ruta);
                textoObtenidoOriginal.setText(textoOriginal);
                System.out.println("Archivo de texto cargado correctamente");
                y=true;
                DescomprimirButton.setEnabled(x&&y);
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ComprimirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprimirButtonActionPerformed
        long start = System.currentTimeMillis();
        textoCodificadoBits = codificador.obtenerCadenaBits(textoObtenidoOriginal.getText());
        textoObtenidoBits.setText(textoCodificadoBits);
        textoCodificadoBytes = codificador.obtenerCadenaBytes(textoCodificadoBits);
        textoObtenidoBytes.setText(textoCodificadoBytes);
        GuardarCadenaButton.setEnabled(true);
        double original = (double)textoObtenidoOriginal.getText().length();
        double comprimido = (double)textoCodificadoBytes.length();
        double division = comprimido/original;
        long end = System.currentTimeMillis();
        long elapsedTime = end - start;
        JOptionPane.showMessageDialog(null,"El archivo se redujo en un: " + roundDouble(division,2)+"%" + "  Tiempo en en la compresion: " +elapsedTime + " milisegundos");
        
    }//GEN-LAST:event_ComprimirButtonActionPerformed
    public static double roundDouble(double value, int places) {
        if (places < 0) {
            throw new IllegalArgumentException();
        }

        long factor = (long) Math.pow(10, places);
        value = value * factor;
        long tmp = Math.round(value);
        return (double) tmp / factor;
    }  
    private void GenerarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarButtonActionPerformed
        codificador.generarCodigo(textoObtenidoOriginal.getText());
        mostrarListaHuffman();
        GuardarCodigoButton.setEnabled(true);
        x=true;
        DescomprimirButton.setEnabled(x&&y);
        ComprimirButton.setEnabled(true);
    }//GEN-LAST:event_GenerarButtonActionPerformed

    private void mostrarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarCodigoActionPerformed

    private void GuardarCadenaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCadenaButtonActionPerformed
        try {
            codificador.guardarCadena(this.textoCodificadoBytes);
            
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarCadenaButtonActionPerformed

    private void GuardarCodigoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarCodigoButtonActionPerformed
        try {
            codificador.guardarCodigos();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarCodigoButtonActionPerformed

    private void ImportarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportarButtonActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("*data","DATA");
            fc.setFileFilter(filtro);
            fc.setFileSelectionMode( JFileChooser.FILES_ONLY);
            int result = fc.showOpenDialog(null);
            File f = fc.getSelectedFile();
            String ruta = f.getAbsolutePath();
            if(ruta.endsWith("data") || ruta.endsWith("DATA"))
            {
                codificador.importarCodigos(ruta);
                mostrarListaHuffman();
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        DescomprimirButton.setEnabled(true);
        ComprimirButton.setEnabled(true);
        GuardarCodigoButton.setEnabled(true);
    }//GEN-LAST:event_ImportarButtonActionPerformed
        
    private void DescomprimirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescomprimirButtonActionPerformed
        try {
            textoDesCodificadoBits = codificador.descomprimirABits(ruta);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        textoObtenidoBits.setText(textoDesCodificadoBits);
        textoDesCodificadoBytes = codificador.descomprimirABytes(textoDesCodificadoBits);
        textoObtenidoBytes.setText(textoDesCodificadoBytes);
        GuardarCadenaButton.setEnabled(true);
    }//GEN-LAST:event_DescomprimirButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ComprimirButton;
    private javax.swing.JButton DescomprimirButton;
    private javax.swing.JButton GenerarButton;
    private javax.swing.JButton GuardarCadenaButton;
    private javax.swing.JButton GuardarCodigoButton;
    private javax.swing.JLabel ICONO;
    private javax.swing.JButton ImportarButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private java.awt.List mostrarCodigo;
    private javax.swing.JTextArea textoObtenidoBits;
    private javax.swing.JTextArea textoObtenidoBytes;
    private javax.swing.JTextArea textoObtenidoOriginal;
    // End of variables declaration//GEN-END:variables

   
    private void mostrarListaHuffman() {
        mostrarCodigo.clear();
        ArrayList<Nodo> codigos = codificador.getCodigos();
        for (int i = 0; i < codigos.size(); i++) {
            mostrarCodigo.add("Caracter: " + codigos.get(i).getLetra() + " | Codigo: "+codigos.get(i).getCodigo());
        }
    }
}
