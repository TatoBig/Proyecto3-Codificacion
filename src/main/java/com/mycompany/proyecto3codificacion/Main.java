/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyecto3codificacion;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Tato
 */
public class Main extends javax.swing.JFrame {

    Codificador codificador = new Codificador();
    String textoCodificadoBits,textoOriginal,textoCodificadoBytes,textoDesCodificadoBits,textoDesCodificadoBytes,ruta;
    boolean x=false,y=false;
    
    public Main() {
        initComponents();
        jButton4.setEnabled(false);
        codificar1.setEnabled(false);
        descomprimir1.setEnabled(false);
        codificar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textoObtenidoOriginal = new javax.swing.JTextArea();
        codificar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textoObtenidoBits = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textoObtenidoBytes = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        mostrarCodigo = new java.awt.List();
        jButton4 = new javax.swing.JButton();
        codificar1 = new javax.swing.JButton();
        descomprimir1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ingrese palabra a codificar");

        jButton1.setText("Abrir archivo a comprimir o descomprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        textoObtenidoOriginal.setColumns(20);
        textoObtenidoOriginal.setRows(5);
        jScrollPane1.setViewportView(textoObtenidoOriginal);

        codificar.setText("Comprimir");
        codificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codificarActionPerformed(evt);
            }
        });

        textoObtenidoBits.setColumns(20);
        textoObtenidoBits.setRows(5);
        jScrollPane2.setViewportView(textoObtenidoBits);

        textoObtenidoBytes.setColumns(20);
        textoObtenidoBytes.setRows(5);
        jScrollPane3.setViewportView(textoObtenidoBytes);

        jLabel2.setText("Codigo Huffman Actual");

        jButton2.setText("Generar Codigo Huffman");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Importar Codigo Nuevo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        mostrarCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarCodigoActionPerformed(evt);
            }
        });

        jButton4.setText("Guardar Codigo Actual");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        codificar1.setText("Guardar Cadena Final");
        codificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codificar1ActionPerformed(evt);
            }
        });

        descomprimir1.setText("Descomprimir");
        descomprimir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descomprimir1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Cadena Bits");

        jLabel4.setText("Cadena Final");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codificar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(mostrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(152, 152, 152))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(codificar)
                            .addComponent(descomprimir1)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel3)
                .addGap(188, 188, 188)
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(codificar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(descomprimir1)))
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton4)
                                    .addComponent(codificar1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(mostrarCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("*txt","TXT");
            fc.setFileFilter(filtro);
            fc.setFileSelectionMode( JFileChooser.FILES_ONLY);
            int result = fc.showOpenDialog(null);
            File f = fc.getSelectedFile();
            String ruta = f.getAbsolutePath();
            if(ruta.endsWith("txt") || ruta.endsWith("TXT"))
            {
                this.ruta = ruta;
                this.textoOriginal = codificador.obtenerTexto(ruta);
                textoObtenidoOriginal.setText(textoOriginal);
                System.out.println("Archivo de texto cargado correctamente");
                y=true;
                descomprimir1.setEnabled(x&&y);
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void codificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codificarActionPerformed
        textoCodificadoBits = codificador.obtenerCadenaBits(textoObtenidoOriginal.getText());
        textoObtenidoBits.setText(textoCodificadoBits);
        textoCodificadoBytes = codificador.obtenerCadenaBytes(textoCodificadoBits);
        textoObtenidoBytes.setText(textoCodificadoBytes);
        codificar1.setEnabled(true);
        double original = (double)textoObtenidoOriginal.getText().length();
        double comprimido = (double)textoCodificadoBytes.length();
        double division = comprimido/original;                
        JOptionPane.showMessageDialog(null,"El archivo se redujo en un: " + roundDouble(division,2)+"%");
    }//GEN-LAST:event_codificarActionPerformed
    public static double roundDouble(double value, int places) {
        if (places < 0) {
            throw new IllegalArgumentException();
        }

        long factor = (long) Math.pow(10, places);
        value = value * factor;
        long tmp = Math.round(value);
        return (double) tmp / factor;
    }  
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        codificador.generarCodigo(textoObtenidoOriginal.getText());
        mostrarListaHuffman();
        jButton4.setEnabled(true);
        x=true;
        descomprimir1.setEnabled(x&&y);
        codificar.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void mostrarCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mostrarCodigoActionPerformed

    private void codificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codificar1ActionPerformed
        try {
            codificador.guardarCadena(this.textoCodificadoBytes);
            
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_codificar1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            codificador.guardarCodigos();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("*data","DATA");
            fc.setFileFilter(filtro);
            fc.setFileSelectionMode( JFileChooser.FILES_ONLY);
            int result = fc.showOpenDialog(null);
            File f = fc.getSelectedFile();
            String ruta = f.getAbsolutePath();
            if(ruta.endsWith("data") || ruta.endsWith("DATA"))
            {
                codificador.importarCodigos(ruta);
                mostrarListaHuffman();
            }
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        descomprimir1.setEnabled(true);
        codificar.setEnabled(true);
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed
        
    private void descomprimir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descomprimir1ActionPerformed
        try {
            textoDesCodificadoBits = codificador.descomprimirABits(ruta);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        textoObtenidoBits.setText(textoDesCodificadoBits);
        textoDesCodificadoBytes = codificador.descomprimirABytes(textoDesCodificadoBits);
        textoObtenidoBytes.setText(textoDesCodificadoBytes);
        codificar1.setEnabled(true);
    }//GEN-LAST:event_descomprimir1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton codificar;
    private javax.swing.JButton codificar1;
    private javax.swing.JButton descomprimir1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.List mostrarCodigo;
    private javax.swing.JTextArea textoObtenidoBits;
    private javax.swing.JTextArea textoObtenidoBytes;
    private javax.swing.JTextArea textoObtenidoOriginal;
    // End of variables declaration//GEN-END:variables

   
    private void mostrarListaHuffman() {
        mostrarCodigo.clear();
        ArrayList<Nodo> codigos = codificador.getCodigos();
        for (int i = 0; i < codigos.size(); i++) {
            mostrarCodigo.add("Caracter: " + codigos.get(i).getLetra() + " | Codigo: "+codigos.get(i).getCodigo());
        }
    }
}
